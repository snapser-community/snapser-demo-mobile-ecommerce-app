/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InventoryDropValues
 */
export interface InventoryDropValues {
    /**
     * Maximum value of drop. Will be equal to min if not specified (DEPRECATED: use max_64)
     * @type {number}
     * @memberof InventoryDropValues
     */
    max?: number;
    /**
     * Maximum value of drop. Will be equal to min if not specified
     * @type {string}
     * @memberof InventoryDropValues
     */
    max64?: string;
    /**
     * Minimum value of drop (DEPRECATED: use min_64)
     * @type {number}
     * @memberof InventoryDropValues
     */
    min?: number;
    /**
     * Minimum value of drop
     * @type {string}
     * @memberof InventoryDropValues
     */
    min64?: string;
    /**
     * Increment value of the drop. Defaults to 1 (DEPRECATED: use multiple_64)
     * @type {number}
     * @memberof InventoryDropValues
     */
    multiple?: number;
    /**
     * Increment value of the drop. Defaults to 1
     * @type {string}
     * @memberof InventoryDropValues
     */
    multiple64?: string;
}

/**
 * Check if a given object implements the InventoryDropValues interface.
 */
export function instanceOfInventoryDropValues(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryDropValuesFromJSON(json: any): InventoryDropValues {
    return InventoryDropValuesFromJSONTyped(json, false);
}

export function InventoryDropValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryDropValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'max': !exists(json, 'max') ? undefined : json['max'],
        'max64': !exists(json, 'max_64') ? undefined : json['max_64'],
        'min': !exists(json, 'min') ? undefined : json['min'],
        'min64': !exists(json, 'min_64') ? undefined : json['min_64'],
        'multiple': !exists(json, 'multiple') ? undefined : json['multiple'],
        'multiple64': !exists(json, 'multiple_64') ? undefined : json['multiple_64'],
    };
}

export function InventoryDropValuesToJSON(value?: InventoryDropValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'max': value.max,
        'max_64': value.max64,
        'min': value.min,
        'min_64': value.min64,
        'multiple': value.multiple,
        'multiple_64': value.multiple64,
    };
}

