/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PurchaseItemWithVirtualCurrencyRequest
 */
export interface PurchaseItemWithVirtualCurrencyRequest {
    /**
     * Name of catalog item to purchase
     * @type {string}
     * @memberof PurchaseItemWithVirtualCurrencyRequest
     */
    catalogItemName?: string;
    /**
     * Name of virtual currency to purchase item with
     * @type {string}
     * @memberof PurchaseItemWithVirtualCurrencyRequest
     */
    currencyName?: string;
    /**
     * Sub inventory instance the purchased items should be added to
     * @type {string}
     * @memberof PurchaseItemWithVirtualCurrencyRequest
     */
    subInventoryInstanceId?: string;
}

/**
 * Check if a given object implements the PurchaseItemWithVirtualCurrencyRequest interface.
 */
export function instanceOfPurchaseItemWithVirtualCurrencyRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PurchaseItemWithVirtualCurrencyRequestFromJSON(json: any): PurchaseItemWithVirtualCurrencyRequest {
    return PurchaseItemWithVirtualCurrencyRequestFromJSONTyped(json, false);
}

export function PurchaseItemWithVirtualCurrencyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PurchaseItemWithVirtualCurrencyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'catalogItemName': !exists(json, 'catalog_item_name') ? undefined : json['catalog_item_name'],
        'currencyName': !exists(json, 'currency_name') ? undefined : json['currency_name'],
        'subInventoryInstanceId': !exists(json, 'sub_inventory_instance_id') ? undefined : json['sub_inventory_instance_id'],
    };
}

export function PurchaseItemWithVirtualCurrencyRequestToJSON(value?: PurchaseItemWithVirtualCurrencyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'catalog_item_name': value.catalogItemName,
        'currency_name': value.currencyName,
        'sub_inventory_instance_id': value.subInventoryInstanceId,
    };
}

