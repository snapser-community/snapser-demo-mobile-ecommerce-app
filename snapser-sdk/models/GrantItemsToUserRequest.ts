/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GrantItemsToUserRequest
 */
export interface GrantItemsToUserRequest {
    /**
     * Unique name and count of items to grant to user
     * @type {{ [key: string]: number; }}
     * @memberof GrantItemsToUserRequest
     */
    items: { [key: string]: number; };
    /**
     * Custom metadata to be attached to user inventory items, not to be confused with catalog item metadata
     * @type {object}
     * @memberof GrantItemsToUserRequest
     */
    metadata?: object;
    /**
     * Sub inventory instance the granted items should be added to
     * @type {string}
     * @memberof GrantItemsToUserRequest
     */
    subInventoryInstanceId?: string;
    /**
     * Name of the sub inventory item to be added to the sub inventory instance (Ignored if sub_inventory_instance_id is not set)
     * @type {string}
     * @memberof GrantItemsToUserRequest
     */
    subInventoryItemName?: string;
}

/**
 * Check if a given object implements the GrantItemsToUserRequest interface.
 */
export function instanceOfGrantItemsToUserRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function GrantItemsToUserRequestFromJSON(json: any): GrantItemsToUserRequest {
    return GrantItemsToUserRequestFromJSONTyped(json, false);
}

export function GrantItemsToUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrantItemsToUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': json['items'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'subInventoryInstanceId': !exists(json, 'sub_inventory_instance_id') ? undefined : json['sub_inventory_instance_id'],
        'subInventoryItemName': !exists(json, 'sub_inventory_item_name') ? undefined : json['sub_inventory_item_name'],
    };
}

export function GrantItemsToUserRequestToJSON(value?: GrantItemsToUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items,
        'metadata': value.metadata,
        'sub_inventory_instance_id': value.subInventoryInstanceId,
        'sub_inventory_item_name': value.subInventoryItemName,
    };
}

