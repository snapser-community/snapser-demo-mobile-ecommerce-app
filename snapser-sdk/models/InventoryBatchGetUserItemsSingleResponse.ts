/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryUserInventoryItem } from './InventoryUserInventoryItem';
import {
    InventoryUserInventoryItemFromJSON,
    InventoryUserInventoryItemFromJSONTyped,
    InventoryUserInventoryItemToJSON,
} from './InventoryUserInventoryItem';

/**
 * 
 * @export
 * @interface InventoryBatchGetUserItemsSingleResponse
 */
export interface InventoryBatchGetUserItemsSingleResponse {
    /**
     * Items in user inventory
     * @type {Array<InventoryUserInventoryItem>}
     * @memberof InventoryBatchGetUserItemsSingleResponse
     */
    items?: Array<InventoryUserInventoryItem>;
    /**
     * Message for the request
     * @type {string}
     * @memberof InventoryBatchGetUserItemsSingleResponse
     */
    message?: string;
    /**
     * Success status of the request
     * @type {boolean}
     * @memberof InventoryBatchGetUserItemsSingleResponse
     */
    success?: boolean;
    /**
     * User id
     * @type {string}
     * @memberof InventoryBatchGetUserItemsSingleResponse
     */
    userId?: string;
}

/**
 * Check if a given object implements the InventoryBatchGetUserItemsSingleResponse interface.
 */
export function instanceOfInventoryBatchGetUserItemsSingleResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryBatchGetUserItemsSingleResponseFromJSON(json: any): InventoryBatchGetUserItemsSingleResponse {
    return InventoryBatchGetUserItemsSingleResponseFromJSONTyped(json, false);
}

export function InventoryBatchGetUserItemsSingleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryBatchGetUserItemsSingleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(InventoryUserInventoryItemFromJSON)),
        'message': !exists(json, 'message') ? undefined : json['message'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
    };
}

export function InventoryBatchGetUserItemsSingleResponseToJSON(value?: InventoryBatchGetUserItemsSingleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(InventoryUserInventoryItemToJSON)),
        'message': value.message,
        'success': value.success,
        'user_id': value.userId,
    };
}

