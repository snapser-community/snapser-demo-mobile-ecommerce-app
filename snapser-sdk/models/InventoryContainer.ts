/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryUnlockCost } from './InventoryUnlockCost';
import {
    InventoryUnlockCostFromJSON,
    InventoryUnlockCostFromJSONTyped,
    InventoryUnlockCostToJSON,
} from './InventoryUnlockCost';

/**
 * 
 * @export
 * @interface InventoryContainer
 */
export interface InventoryContainer {
    /**
     * Drop table names associated with the container
     * @type {{ [key: string]: number; }}
     * @memberof InventoryContainer
     */
    dropTables?: { [key: string]: number; };
    /**
     * Items in the container
     * @type {{ [key: string]: number; }}
     * @memberof InventoryContainer
     */
    items?: { [key: string]: number; };
    /**
     * Unlock cost of the container
     * @type {Array<InventoryUnlockCost>}
     * @memberof InventoryContainer
     */
    unlockCost?: Array<InventoryUnlockCost>;
    /**
     * Virtual currencies granted upon opening the container (DEPRECATED: use virtual_currencies_64)
     * @type {{ [key: string]: number; }}
     * @memberof InventoryContainer
     */
    virtualCurrencies?: { [key: string]: number; };
    /**
     * Virtual currencies granted upon opening the container
     * @type {{ [key: string]: string; }}
     * @memberof InventoryContainer
     */
    virtualCurrencies64?: { [key: string]: string; };
}

/**
 * Check if a given object implements the InventoryContainer interface.
 */
export function instanceOfInventoryContainer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryContainerFromJSON(json: any): InventoryContainer {
    return InventoryContainerFromJSONTyped(json, false);
}

export function InventoryContainerFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryContainer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dropTables': !exists(json, 'drop_tables') ? undefined : json['drop_tables'],
        'items': !exists(json, 'items') ? undefined : json['items'],
        'unlockCost': !exists(json, 'unlock_cost') ? undefined : ((json['unlock_cost'] as Array<any>).map(InventoryUnlockCostFromJSON)),
        'virtualCurrencies': !exists(json, 'virtual_currencies') ? undefined : json['virtual_currencies'],
        'virtualCurrencies64': !exists(json, 'virtual_currencies_64') ? undefined : json['virtual_currencies_64'],
    };
}

export function InventoryContainerToJSON(value?: InventoryContainer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'drop_tables': value.dropTables,
        'items': value.items,
        'unlock_cost': value.unlockCost === undefined ? undefined : ((value.unlockCost as Array<any>).map(InventoryUnlockCostToJSON)),
        'virtual_currencies': value.virtualCurrencies,
        'virtual_currencies_64': value.virtualCurrencies64,
    };
}

