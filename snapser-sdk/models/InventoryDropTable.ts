/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryDropTableDrops } from './InventoryDropTableDrops';
import {
    InventoryDropTableDropsFromJSON,
    InventoryDropTableDropsFromJSONTyped,
    InventoryDropTableDropsToJSON,
} from './InventoryDropTableDrops';

/**
 * 
 * @export
 * @interface InventoryDropTable
 */
export interface InventoryDropTable {
    /**
     * Items in the drop table
     * @type {Array<InventoryDropTableDrops>}
     * @memberof InventoryDropTable
     */
    drops?: Array<InventoryDropTableDrops>;
    /**
     * Name of drop table
     * @type {string}
     * @memberof InventoryDropTable
     */
    name?: string;
}

/**
 * Check if a given object implements the InventoryDropTable interface.
 */
export function instanceOfInventoryDropTable(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryDropTableFromJSON(json: any): InventoryDropTable {
    return InventoryDropTableFromJSONTyped(json, false);
}

export function InventoryDropTableFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryDropTable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'drops': !exists(json, 'drops') ? undefined : ((json['drops'] as Array<any>).map(InventoryDropTableDropsFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function InventoryDropTableToJSON(value?: InventoryDropTable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'drops': value.drops === undefined ? undefined : ((value.drops as Array<any>).map(InventoryDropTableDropsToJSON)),
        'name': value.name,
    };
}

