/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryGrantResults } from './InventoryGrantResults';
import {
    InventoryGrantResultsFromJSON,
    InventoryGrantResultsFromJSONTyped,
    InventoryGrantResultsToJSON,
} from './InventoryGrantResults';
import type { InventoryUserInventoryItem } from './InventoryUserInventoryItem';
import {
    InventoryUserInventoryItemFromJSON,
    InventoryUserInventoryItemFromJSONTyped,
    InventoryUserInventoryItemToJSON,
} from './InventoryUserInventoryItem';

/**
 * 
 * @export
 * @interface InventoryGrantDropTableResponse
 */
export interface InventoryGrantDropTableResponse {
    /**
     * Index of the drop table that was granted
     * @type {number}
     * @memberof InventoryGrantDropTableResponse
     */
    dropIndex?: number;
    /**
     * 
     * @type {InventoryGrantResults}
     * @memberof InventoryGrantDropTableResponse
     */
    grantResults?: InventoryGrantResults;
    /**
     * Items granted to the user (DEPRECATED: use grant_results.granted_items)
     * @type {Array<InventoryUserInventoryItem>}
     * @memberof InventoryGrantDropTableResponse
     */
    grantedItems?: Array<InventoryUserInventoryItem>;
    /**
     * Trackables energy granted to the user (DEPRECATED: use grant_results.granted_trackables_energy)
     * @type {{ [key: string]: number; }}
     * @memberof InventoryGrantDropTableResponse
     */
    grantedTrackablesEnergy?: { [key: string]: number; };
    /**
     * Trackables xp granted to the user (DEPRECATED: use grant_results.granted_trackables_xp)
     * @type {{ [key: string]: number; }}
     * @memberof InventoryGrantDropTableResponse
     */
    grantedTrackablesXp?: { [key: string]: number; };
    /**
     * Virtual currency granted to the user (DEPRECATED: use grant_results.granted_currencies)
     * @type {{ [key: string]: number; }}
     * @memberof InventoryGrantDropTableResponse
     */
    grantedVirtualCurrency?: { [key: string]: number; };
    /**
     * Virtual currency granted to the user (DEPRECATED: use grant_results.granted_currencies)
     * @type {{ [key: string]: string; }}
     * @memberof InventoryGrantDropTableResponse
     */
    grantedVirtualCurrency64?: { [key: string]: string; };
}

/**
 * Check if a given object implements the InventoryGrantDropTableResponse interface.
 */
export function instanceOfInventoryGrantDropTableResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryGrantDropTableResponseFromJSON(json: any): InventoryGrantDropTableResponse {
    return InventoryGrantDropTableResponseFromJSONTyped(json, false);
}

export function InventoryGrantDropTableResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryGrantDropTableResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dropIndex': !exists(json, 'drop_index') ? undefined : json['drop_index'],
        'grantResults': !exists(json, 'grant_results') ? undefined : InventoryGrantResultsFromJSON(json['grant_results']),
        'grantedItems': !exists(json, 'granted_items') ? undefined : ((json['granted_items'] as Array<any>).map(InventoryUserInventoryItemFromJSON)),
        'grantedTrackablesEnergy': !exists(json, 'granted_trackables_energy') ? undefined : json['granted_trackables_energy'],
        'grantedTrackablesXp': !exists(json, 'granted_trackables_xp') ? undefined : json['granted_trackables_xp'],
        'grantedVirtualCurrency': !exists(json, 'granted_virtual_currency') ? undefined : json['granted_virtual_currency'],
        'grantedVirtualCurrency64': !exists(json, 'granted_virtual_currency_64') ? undefined : json['granted_virtual_currency_64'],
    };
}

export function InventoryGrantDropTableResponseToJSON(value?: InventoryGrantDropTableResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'drop_index': value.dropIndex,
        'grant_results': InventoryGrantResultsToJSON(value.grantResults),
        'granted_items': value.grantedItems === undefined ? undefined : ((value.grantedItems as Array<any>).map(InventoryUserInventoryItemToJSON)),
        'granted_trackables_energy': value.grantedTrackablesEnergy,
        'granted_trackables_xp': value.grantedTrackablesXp,
        'granted_virtual_currency': value.grantedVirtualCurrency,
        'granted_virtual_currency_64': value.grantedVirtualCurrency64,
    };
}

