/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v2 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryDropTable } from './InventoryDropTable';
import {
    InventoryDropTableFromJSON,
    InventoryDropTableFromJSONTyped,
    InventoryDropTableToJSON,
} from './InventoryDropTable';

/**
 * 
 * @export
 * @interface InventoryGetContainerResponse
 */
export interface InventoryGetContainerResponse {
    /**
     * Virtual currencies in the container with their counts (DEPRECATED: use currencies_64)
     * @type {{ [key: string]: number; }}
     * @memberof InventoryGetContainerResponse
     */
    currencies?: { [key: string]: number; };
    /**
     * Virtual int64 currencies in the container with their counts
     * @type {{ [key: string]: string; }}
     * @memberof InventoryGetContainerResponse
     */
    currencies64?: { [key: string]: string; };
    /**
     * Drop tables associated with the container
     * @type {Array<InventoryDropTable>}
     * @memberof InventoryGetContainerResponse
     */
    dropTableContents?: Array<InventoryDropTable>;
    /**
     * Drop tables associated with the container
     * @type {{ [key: string]: number; }}
     * @memberof InventoryGetContainerResponse
     */
    dropTables?: { [key: string]: number; };
    /**
     * Items in the container with their counts
     * @type {{ [key: string]: number; }}
     * @memberof InventoryGetContainerResponse
     */
    items?: { [key: string]: number; };
    /**
     * Name of the container
     * @type {string}
     * @memberof InventoryGetContainerResponse
     */
    name?: string;
}

/**
 * Check if a given object implements the InventoryGetContainerResponse interface.
 */
export function instanceOfInventoryGetContainerResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryGetContainerResponseFromJSON(json: any): InventoryGetContainerResponse {
    return InventoryGetContainerResponseFromJSONTyped(json, false);
}

export function InventoryGetContainerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryGetContainerResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currencies': !exists(json, 'currencies') ? undefined : json['currencies'],
        'currencies64': !exists(json, 'currencies_64') ? undefined : json['currencies_64'],
        'dropTableContents': !exists(json, 'drop_table_contents') ? undefined : ((json['drop_table_contents'] as Array<any>).map(InventoryDropTableFromJSON)),
        'dropTables': !exists(json, 'drop_tables') ? undefined : json['drop_tables'],
        'items': !exists(json, 'items') ? undefined : json['items'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function InventoryGetContainerResponseToJSON(value?: InventoryGetContainerResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currencies': value.currencies,
        'currencies_64': value.currencies64,
        'drop_table_contents': value.dropTableContents === undefined ? undefined : ((value.dropTableContents as Array<any>).map(InventoryDropTableToJSON)),
        'drop_tables': value.dropTables,
        'items': value.items,
        'name': value.name,
    };
}

